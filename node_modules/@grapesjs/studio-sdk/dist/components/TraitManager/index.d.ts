/// <reference types="react" />
import { TraitsResultProps } from '@grapesjs/react';
import type { Editor, Trait } from 'grapesjs';
import { CodeFieldProps } from '../CodeField';
export declare const getInputProps: (trait: Trait, editor?: Editor) => {
    type: string;
    size: "s";
    value: any;
    label: string;
    placeholder: any;
    onChange: (value: string, partial: boolean) => void;
};
export declare const getSelectProps: (trait: Trait) => {
    options: ({
        id: string;
        label: string;
        title?: undefined;
    } | {
        id: any;
        title: any;
        label: any;
    })[];
    onChange: (value: string) => void;
    type: string;
    size: "s";
    value: any;
    label: string;
    placeholder: any;
};
export declare const getNumberProps: (trait: any) => {
    units: any;
    type: string;
    size: "s";
    value: any;
    label: string;
    placeholder: any;
    onChange: (value: string, partial: boolean) => void;
};
export declare const getButtonProps: (trait: Trait) => {
    children: string;
    onClick: () => void;
    full: boolean;
};
export declare const getCheckboxProps: (trait: Trait) => {
    size: "s";
    value: boolean;
    label: string;
    onChange: (value: boolean) => void;
};
export declare const getCodeProps: (trait: Trait) => CodeFieldProps;
export declare const getFileProps: (trait: Trait, editor?: Editor) => {
    isContain: boolean;
    onOpen(): void;
    type: string;
    size: "s";
    value: any;
    label: string;
    placeholder: any;
    onChange: (value: string, partial: boolean) => void;
};
export default function TraitManager({ traits, className }: TraitsResultProps & React.HTMLProps<HTMLDivElement>): import("react/jsx-runtime").JSX.Element;
